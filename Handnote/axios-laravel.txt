		============== laravel controller ================

1. api.php
	
	Route::apiResource('/products', ApiProductController::class);


2. controller


<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Models\Product;
use Illuminate\Http\Request;

class ApiProductController extends Controller
{

    public function index()
    {
        return Product::orderBy('id', 'desc')->get();
    }


    public function store(Request $request)
    {

        $stores = $request->all();
        // return $stores = $request->prod_detais;

        $request->validate([
            'product_name' => 'required',
            'product_details' => 'required',
            'product_price' => 'required',
            'product_category' => 'required',
            'product_stock' => 'required',
            // 'product_image' => 'mimes:jpeg,png,jpg,gif,svg|max:2048',
        ]);



          Product::create($stores);
          return response()->json(['msg' => 'Successfully Inserted']);
    }


    public function show($id)
    {
        //
    }


    public function update(Request $request, $id)
    {

        $product = Product::findOrFail($id);
        $input = $request->all();
        $product->update($input);
        return response()->json(['msg' => 'Update']);
    }


    public function destroy($id)
    {

        $product = Product::findOrFail($id);

        $product->delete($id);
        return response()->json(['msg' => 'Successfully Deleted']);
    }
}






		================ vue file ====================



<template lang="">
  <div class="container mt-5">
    <h2 style="text-align: center">Products</h2>
    <hr />
    <div class="row">
      <div class="col-md-4">
        <button @click="
          formDisplay = 'true';
          IsSubmitButton = 'true'
          " class="btn btn-primary">
          Add New product
        </button>
      </div>

      <div class="col-md-8">
        <!-- form: create -->

        <div v-if="formDisplay">
          {{ JSON.stringify(formValues, null, 2) }}

          <form  method="post">
            <div class="col-12">
              <div class="form-group">
                <label class="form-label" for="product-title"
                  >Product Name</label
                >
                <div class="form-control-wrap">
                  <input
                    type="text"
                    v-model="formValues.p_name"
                    class="form-control"
                    id="product_name"
                  />
                </div>
              </div>
            </div>
            <div class="col-md-12">
              <div class="form-group">
                <label class="form-label" for="regular-price"
                  >Product Details</label
                >
                <div class="form-control-wrap">
                  <textarea
                    v-model="formValues.p_details"
                    class="form-control"
                    id="product_details"
                    cols="30"
                    rows="5"
                  >
                  </textarea>
                </div>
              </div>
            </div>
            <div class="col-md-12">
              <div class="form-group">
                <label class="form-label" for="regular-price"
                  >Product Price</label
                >
                <div class="form-control-wrap">
                  <input
                    type="number"
                    v-model="formValues.p_price"
                    class="form-control"
                    id="product_price"
                  />
                </div>
              </div>
            </div>
            <div class="col-md-12">
              <div class="form-group">
                <label class="form-label" for="sale-price">Stock</label>
                <div class="form-control-wrap">
                  <input
                    type="number"
                    v-model="formValues.p_stock"
                    class="form-control"
                    id="product_stock"
                  />
                </div>
              </div>
            </div>

            <div class="col-md-12">
              <div class="form-group">
                <label class="form-label" for="category">Category</label>
                <div class="form-control-wrap">
                  <select
                    v-model="formValues.p_cat"
                    class="form-control"
                    id="product_category"
                  >
                    <option value="" disabled selected>Select One</option>

                    <option value="1">Shirt</option>
                    <option value="2">Pant</option>
                    <option value="3">Shoe</option>
                  </select>
                </div>
              </div>
            </div>
            <br />
            <div class="col-md-12 form-group">
              <label class="form-label" for="category">Image</label>
              <span></span>
              <input class="form-group" type="file" id="product_image" />
            </div>
            <br />

            <div class="col-12 form-group">
              <button v-if="IsSubmitButton" @click="product_submit()"  type="button" class="btn btn-primary">Submit </button>
            </div>

            <div class="col-12 form-group" v-if="IsUpdateButton">
              <button  @click="product_update()" type="button" class="btn btn-primary">Update</button>
            </div>

          </form>
        </div>
        <hr />
        <!-- End create form -->

        <!-- show data  -->
        <div v-if="productList">

          <div v-for="(product, index) in products" :key="product.id">
            <div class="col-sm-8">
              <h2>ID: {{ product.id }}</h2>
              <h3>{{ product.product_name }}</h3>

              <p>
                {{ product.product_details }}
              </p>

              <button  @click="product_edit(product); IsUpdateButton = true; " class="btn btn-primary">
                Edit
              </button>
              <span></span>

              <button
                @click="product_delete(product.id)"
                class="btn btn-danger"
              >
                Delete
              </button>

              <hr />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import axios from "axios";

export default {
  data() {
    return {
      products: [],
      productList: true,
      formDisplay: false,
      EditformDisplay: false,
      IsSubmitButton: false,
      IsUpdateButton: false,
  
      formValues: {
        p_name: "",
        p_details: "",
        p_price: "",
        p_stock: "",
        p_cat: "",
      },

    };
  },

  mounted() {
    // show product
    this.get_products();
  },

  methods: {

    // create product
    product_submit() {
      axios
        .post("http://localhost:8000/api/products", {
          // prod_detais: this.formValues
          product_name: this.formValues.p_name,
          product_details: this.formValues.p_details,
          product_price: this.formValues.p_price,
          product_stock: this.formValues.p_stock,
          product_category: this.formValues.p_cat,
        })
        .then((response) => {
          this.formDisplay = false;
          this.formValues = {};
          this.get_products();

          // alert(JSON.stringify(this.formValues, null, 2));
          alert(response.data.msg);
          console.log(response.data.msg);
        })
        .catch((error) => {
          console.log(error.response.data);
          alert(JSON.stringify(error.response.data));
        });
    },

    // show product-  re render mounted
    get_products() {
      axios.get("http://localhost:8000/api/products").then((response) => {
        this.products = response.data;
      });
    },

    // Edit product

    product_edit(product){

      this.formDisplay = true;
      this.formValues.p_id = product.id;
      this.formValues.p_name = product.product_name;
      this.formValues.p_details = product.product_details;
      this.formValues.p_price = product.product_price;
      this.formValues.p_stock = product.product_stock;
      this.formValues.p_cat = product.product_category;
      this.productList = false;
    },

    // Update product

    product_update() {
      axios
        .put("http://localhost:8000/api/products/" + this.formValues.id, {
          product_name: this.formValues.p_name,
          product_details: this.formValues.p_details,
          product_price: this.formValues.p_price,
          product_stock: this.formValues.p_stock,
          product_category: this.formValues.p_cat,
        })
        .then((response) => {
          this.get_products();
          alert(response.data.msg);
        });
    },


    // delete product

    product_delete(id) {
      axios
        .delete("http://localhost:8000/api/products/" + id)
        .then((response) => {
          this.get_products();
          alert(response.data.msg);
        });
    },
  },
};
</script>

<style lang=""></style>
